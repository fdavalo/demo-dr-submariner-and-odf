apiVersion: apps/v1
kind: Deployment
metadata:
  name: dr-app
  namespace: demo-dr-with-submariner-and-odf
spec:
  selector:
    matchLabels:
      app: dr-app-httpd
  replicas: 1
  template:
    metadata:
      labels:
        app: dr-app-httpd
    spec:
      initContainers:
        - name: data
          command:
            - cp
            - /app/index.html
            - /var/www/html/index.html
          volumeMounts:
            - name: mypvc
              mountPath: /var/www/html
          image: 'registry.redhat.io/ubi8/ubi-minimal'
          volumeMounts:
            - name: files
              mountPath: /app/index.html
              subPath: index.html
            - name: mypvc
              mountPath: /var/www/html      
      containers:
        - name: httpd
          image: >-
            image-registry.openshift-image-registry.svc:5000/openshift/httpd:latest
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: mypvc
              mountPath: /var/www/html
        - name: data
          command:
            - sh
            - '-c'
            - >-
              while true; do echo $(date) | tee -a /var/www/html/index.txt; sync; sleep 1;
              done
          volumeMounts:
            - name: mypvc
              mountPath: /var/www/html
          image: 'registry.redhat.io/ubi8/ubi-minimal'
      volumes:
        - name: mypvc
          persistentVolumeClaim:
            claimName: dr-app-data
        - name: files
          configMap:
            name: dr-app-files
